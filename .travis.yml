language: bash
services: docker

env:
  - DIR=master
  - DIR=master VARIANT=alpine
  - DIR=21
  - DIR=21 VARIANT=slim
  - DIR=21 VARIANT=alpine
  - DIR=21 VARIANT=jessie
  - DIR=20
  - DIR=20 VARIANT=slim
  - DIR=20 VARIANT=alpine
  - DIR=19
  - DIR=19 VARIANT=slim

install:
  - git clone https://github.com/docker-library/official-images.git ~/official-images

before_script:
  - cd "$DIR"
  - eval $(awk '/OTP_VERSION=/ { sub(/@/, "-", $2); print $2; exit }' ${VARIANT:-.}/Dockerfile)
  - image="erlang:${OTP_VERSION}${VARIANT:+-$VARIANT}"

script:
    - |
      (
      set -x -Eeuo pipefail
      docker build --pull -t "$image" "${VARIANT:-.}"
      ~/official-images/test/run.sh "$image"
      ## see travis-ci/travis-ci#5434, build.sh uses unbound variables, bash set -u results in fail
      ## solution copy from https://stackoverflow.com/questions/11362250/in-bash-how-do-i-test-if-a-variable-is-defined-in-u-mode/11362364#11362364
      if [ -z "${VARIANT-}" ]; then
         VARIANT=test
      fi
      if [[ "$VARIANT" == "alpine" ]]; then
        if [ -d alpine/alpine-rebar3 ]; then
          docker build -t "$image-rebar3" alpine/alpine-rebar3
          ~/official-images/test/run.sh "$image-rebar3"
        fi
      fi
      )

after_script:
  - docker images
